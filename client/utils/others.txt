//  const [selected, setSelected] = React.useState<string>();
//  const [viewOption, setViewOption] = React.useState<string>(() => {
//    const myCookieValue = Cookies.get('myCookie');
//    return myCookieValue ? myCookieValue.replaceAll('"', '') : 'List';
//  });
//  const [fileLength, setFileLength] = React.useState<number>(0);
//  const [modalState, setModalState] = React.useState(false);
//  const [viewOptionState, setViewOptionState] = React.useState(false);//

//  // @desc Find-File
//  const [code, setCode] = React.useState('');//

//  const handleClose = () => {
//    setModalState((prevState: boolean) => !prevState);
//  };//

//  React.useEffect(() => {
//    if (typeof window !== 'undefined') {
//      Cookies.set('myCookie', JSON.stringify(viewOption));
//    }//

//    setSelected(viewOption);
//  }, [viewOption]);



  React.useEffect(() => {
    const handleScroll = ():void => {
      const winScroll =
        document.body.scrollTop || document.documentElement.scrollTop;
      const height =
        document.documentElement.scrollHeight -
        document.documentElement.clientHeight;
      setPercent(Math.round((winScroll / height) * 100));
    };

    window.addEventListener('scroll', handleScroll);

    return () => {
      window.removeEventListener('scroll', handleScroll);
    };
  }, [percent]);

  
  const TopBar = ({ percent }: any) => (
    <div className='fixed inset-x-0 top-0 z-50'>
      <div className='h-2 bg-blue-500' style={{ width: `${percent}%` }}></div>
    </div>
  );